<html>
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Dora Pozzi."></meta><meta name="keywords" content="Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>
<title>
Drill on "the same"
</title>

<script language="javascript" type="text/javascript">

//<![CDATA[

<!--

// BrowserCheck Object

function BrowserCheck() {
	var b = navigator.appName
//HBS extension
	this.mac = (navigator.appVersion.indexOf('Mac') != -1)
	if (b=="Netscape") this.b = "ns"
	else if (b=="Microsoft Internet Explorer") this.b = "ie"
	else this.b = b
	this.version = navigator.appVersion
	this.v = parseInt(this.version)
	this.ns = (this.b=="ns" && this.v>=4)
	this.ns4 = (this.b=="ns" && this.v==4)
	this.ns5 = (this.b=="ns" && this.v==5)
	this.ie = (this.b=="ie" && this.v>=4)
	this.ie4 = (this.version.indexOf('MSIE 4')>0)
	this.ie5 = (this.version.indexOf('MSIE 5')>0)
	this.min = (this.ns||this.ie)
	this.CRAPBrowser = (this.ie && this.mac); //Cannot Resolve Addresses Properly
}

is = new BrowserCheck();

var LocFolder = GetFolder(window.location.href);
function GetFolder(LocPath){
	LocPath = ReplaceStuff('\'','%27',LocPath);
	var i = LocPath.lastIndexOf('/');
	if (i<0){i=LocPath.lastIndexOf('\\')};
	return LocPath.substring(0,i);
}

function CombineURLs(InURL){
	var i = InURL.indexOf('../');
	var s = LocFolder;
	while (i >- 1){
		s = GetFolder(s);
		InURL = InURL.substring(3,InURL.length);
		i = InURL.indexOf('../');
	}
	return s + '/' + InURL;
}

x = new Array();
function ResolveURLs(InText,Attribute){
	x.length=0;
	var Temp = InText.toLowerCase();
	var z;
	var AttLen = Attribute.length + 2;
	var y=Temp.lastIndexOf(Attribute + '="');
	while (y>-1){
		var sLoc = y+AttLen;
		if (Temp.substring(sLoc,sLoc+5) != 'http:'){
			x[x.length]=new Array();
			x[x.length-1][0] = sLoc;
			z = Temp.indexOf('"',sLoc);
			x[x.length-1][1] = z;
			x[x.length-1][2] = InText.substring(sLoc,z);

		}
		Temp = Temp.substring(0,y);
		y=Temp.lastIndexOf(Attribute + '="');
	}
	for (var j=0; j<x.length; j++){
		InText = InText.substring(0,x[j][0]) + CombineURLs(x[j][2]) + InText.substring(x[j][1], InText.length);
	}
	return InText;
}

function ResolveAllURLs(Stuff){
	Stuff = ResolveURLs(Stuff,'href');
	Stuff = ResolveURLs(Stuff,'src');
	Stuff = ResolveURLs(Stuff,'parent.location');
	return Stuff;
}


var ExBGColor = '#bbbbee';



var PageBGColor = '#ffffff';



var NavBarColor = '#000066';


var TextColor = '#000000';
var CurrQNum = 0;
var ALetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
var CorrectIndicator = ': ) ';
var IncorrectIndicator = 'X';
var YourScoreIs = 'Your score is ';
var Tries = 0;
var CorrectChoices = 0;
var ContinuousScoring = true;
var CorrectFirstTime = 'Questions answered correctly first time: ';var ExerciseTitle = '<b>Drill on "the same"';
var ExerciseSubtitle = '<font+2><b> Multiple choice drill. ';
var Instructions = '<font+2><b>Click <a href="voc.htm"><a href="voc.same.doc">here</a></a> for vocabulary.  Choose the right answer,  then click on the other buttons and read the feedback in this space, to see if you recognize the other expressions.  Feel free to repeat the drill... : )'; //'';
var ShuffleQs = false;
var ShuffleAs = false;
var DefaultRight = 'Correct!';
var DefaultWrong = 'Sorry! Try again.';
var QsToShow = 8;
var ShowOneByOne = true;
var ReadingURL = '';
var EraseFeedback = true;
var Score = 0;

var PreviousPage = history.length;







var NavBar='';



var TitleCode = '<tr><td align="center" valign="middle" bgcolor="#ffffff">';
TitleCode += '<font size="+1" face="Geneva,Arial" color="#000033">' + ExerciseTitle + '</font><br />';
TitleCode += '<font size="-1" face="Geneva,Arial" color="#000033">' + ExerciseSubtitle + '<br />';
TitleCode += '</font></td></tr>';

var QButtonsOpener = '<table border="0" width="85%" cellpadding="10">';
QButtonsOpener += '<tr><td align="center" valign="middle"><form>';
QButtonsOpener += '<font size="+1"><input type="button" value="&lt;=" onclick="parent.ChangeQ(-1)"></input>';
var QButtonsCloser = '<input type="button" value="=&gt;" onclick="parent.ChangeQ(1)"></input>';
QButtonsCloser += '</font></form></td></tr></table>';

var TableOpener = '<form name="QForm">';
TableOpener += '<table border="0" width="85%">';
var QRow = '<tr><td valign="top" bgcolor="#bbbbee" align="right">';
QRow += '<font size="+1" face="Geneva,Arial" color="#000000">[QNumber]</font></td>';
QRow += '<td colspan="3" valign="top" bgcolor="#bbbbee"><font size="-1" face="Geneva,Arial" color="#000000">[Question]<br />&nbsp;';
QRow += '</font></td></tr>';

var ARow = '<tr><td></td><td valign="top" bgcolor="#bbbbee"><input type="text" value=" " size="3" name="FB_[QNum]_[ANum]"></input></td>';
ARow += '<td valign="top" bgcolor="#bbbbee"><input type="button" value="[ALetter]" OnClick="parent.CheckAnswer([QNum],[ANum])"></input></td>';
ARow += '<td width="100%" bgcolor="#bbbbee"><font size="-1" face="Geneva,Arial" color="#000000">[Ans]</font></td></tr>';

var MARow = '<tr><td></td><td valign="top" bgcolor="#bbbbee" colspan="3"><input type="checkbox" name="A_[QNum]_[ANum]" value="[Correct]"></input>';
MARow += '<font size="-1" face="Geneva,Arial" color="#000000">[Ans]</font></td></tr>';

var CheckButton = '<tr><td></td><td valign="top" bgcolor="#bbbbee" ><input type="button" value="Check"';
CheckButton += ' onclick="parent.CheckMulti([QNum])"></input></td></tr>';

TableCloser = '</table></form>';

function GoBack(){
	var BackSkip = history.length - PreviousPage;
	if (BackSkip > 0){
		history.go((BackSkip+1)*-1);
	}
	else{
		parent.history.back();
	}
}

function ReduceItems(){
	var ItemToDump=0;
	var j=0;
	while (I.length > QsToShow){
		ItemToDump = Math.floor(I.length*Math.random());
		for (j=ItemToDump; j<(I.length-1); j++){
			I[j] = I[j+1];
		}
		I.length = I.length-1;
	}
}

function Shuffle(InArray){
	Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < j; k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteFeedback(Feedback) {
	if (is.CRAPBrowser){Feedback=ResolveAllURLs(Feedback);}
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += NavBar;
	if (Feedback.length>0){
		OutString += '<tr><td bgcolor="#bbbbee" align="center">'; 
		OutString += '<font face="Geneva,Arial" size="-1" color="#000000">';
		OutString += Feedback;
		OutString += '</font></td></tr>'
	}
	OutString += '</table></center></body></html>';
//Write it to the frame
	TopFrame.document.clear();
	TopFrame.document.open();
	TopFrame.document.write(OutString);
	TopFrame.document.close();
}

function StartUp(){




//Reduce array if required
	if (QsToShow < I.length){
		ReduceItems();
	}

//Shuffle stuff if required

	if (ShuffleQs == true){
		I = Shuffle(I);
	}

	if (ShuffleAs == true){
		for (var i=0; i<I.length; i++){
			I[i][1] = Shuffle(I[i][1]);
		}
	}

//Create arrays
	CreateStatusArrays();



//Show the first question or all of them
	if (ShowOneByOne == false){
		ShowAllQs();
	}
	else{
		ShowQuestion(CurrQNum);
	}

//Write the top frame
	WriteFeedback(Instructions);
}


I = new Array();

I[0] = new Array();
I[0][0]='<font+2><b>of the same gift';
I[0][1] = new Array();
I[0][1][0] = new Array();
I[0][1][0][0]='<img src="twi dwrwi twi autwi.gif" alt="twi dwrwi twi autwi.gif" width="220" height="30" border="0"></img>';
I[0][1][0][1]='<b>Sorry!  This means = "to, for, with the same gift."';
I[0][1][0][2] = 0;
I[0][1][1] = new Array();
I[0][1][1][0]='<img src="tou autou dwrou.gif" alt="tou autou dwrou.gif" width="220" height="30" border="0"></img>';
I[0][1][1][1]='<img src="kalws.jpg" alt="kalws.jpg" width="96" height="25" border="0"></img>';
I[0][1][1][2] = 1;
I[0][1][2] = new Array();
I[0][1][2][0]='<img src="tois autois dwrois.gif" alt="tois autois dwrois.gif" width="220" height="30" border="0"></img>';
I[0][1][2][1]='<b>Tis means = "to, for, with the same gifts." Try again! : (';
I[0][1][2][2] = 0;
I[0][1][3] = new Array();
I[0][1][3][0]='<img src="touto to dwrov.gif" alt="touto to dwrov.gif" width="220" height="30" border="0"></img>';
I[0][1][3][1]='<b> Oops!  This means "that gift" as S or DO.';
I[0][1][3][2] = 0;
I[0][1][4] = new Array();
I[0][1][4][0]='<img src="twi dwrwi toutwi.gif" alt="twi dwrwi toutwi.gif" width="220" height="30" border="0"></img>';
I[0][1][4][1]='<b>  This means "to, for, with that gift." Try again! : (';
I[0][1][4][2] = 0;
I[0][2] = 0;

I[1] = new Array();
I[1][0]='<font+2><b>that gift';
I[1][1] = new Array();
I[1][1][0] = new Array();
I[1][1][0][0]='<img src="to auto dwrov.gif" alt="to auto dwrov.gif" width="220" height="30" border="0"></img>';
I[1][1][0][1]='<b>Oops!  This means "the same gift" as S or DO';
I[1][1][0][2] = 0;
I[1][1][1] = new Array();
I[1][1][1][0]='<img src="toutois tois dwrois.gif" alt="toutois tois dwrois.gif" width="220" height="30" border="0"></img>';
I[1][1][1][1]='<b>Try again!  This means = "to, for, with those gifts."';
I[1][1][1][2] = 0;
I[1][1][2] = new Array();
I[1][1][2][0]='<img src="ta auta dwra.gif" alt="ta auta dwra.gif" width="220" height="30" border="0"></img>';
I[1][1][2][1]='<b>Try again!  This means "the same gifts" as S or DO';
I[1][1][2][2] = 0;
I[1][1][3] = new Array();
I[1][1][3][0]='<img src="tois autois dwrois.gif" alt="tois autois dwrois.gif" width="220" height="30" border="0"></img>';
I[1][1][3][1]='<b>Sorry!  This means "to, for, with the same gifts." ';
I[1][1][3][2] = 0;
I[1][1][4] = new Array();
I[1][1][4][0]='<img src="touto to dwrov.gif" alt="touto to dwrov.gif" width="220" height="30" border="0"></img>';
I[1][1][4][1]='<img src="kalws.jpg" alt="kalws.jpg" width="96" height="25" border="0"></img>';
I[1][1][4][2] = 1;
I[1][2] = 0;

I[2] = new Array();
I[2][0]='<font+2><b>to, for, with the same gift';
I[2][1] = new Array();
I[2][1][0] = new Array();
I[2][1][0][0]='<img src="hoi autoi potamoi.gif" alt="hoi autoi potamoi.gif" width="220" height="30" border="0"></img>';
I[2][1][0][1]='<b>Try again! : (  This means "the same rivers" as S';
I[2][1][0][2] = 0;
I[2][1][1] = new Array();
I[2][1][1][0]='<img src="touto to auto dwrov.gif" alt="touto to auto dwrov.gif" width="220" height="30" border="0"></img>';
I[2][1][1][1]='<b>Oops!  This means "that same gift" as S or DO. Try again! : (';
I[2][1][1][2] = 0;
I[2][1][2] = new Array();
I[2][1][2][0]='<img src="twi dwrwi twi autwi.gif" alt="twi dwrwi twi autwi.gif" width="220" height="30" border="0"></img>';
I[2][1][2][1]='<img src="kalws.jpg" alt="kalws.jpg" width="96" height="25" border="0"></img>';
I[2][1][2][2] = 1;
I[2][1][3] = new Array();
I[2][1][3][0]='<img src="hoi autoi potamoi.gif" alt="hoi autoi potamoi.gif" width="220" height="30" border="0"></img>';
I[2][1][3][1]='<b>Oops!  This means "the same rivers" as S.  Try again! : (';
I[2][1][3][2] = 0;
I[2][1][4] = new Array();
I[2][1][4][0]='<img src="houtos ho potamos.gif" alt="houtos ho potamos.gif" width="220" height="30" border="0"></img>';
I[2][1][4][1]='<b> Try again! : (   This means "that river" as S.';
I[2][1][4][2] = 0;
I[2][2] = 0;

I[3] = new Array();
I[3][0]='<font+2><b>to, for, with the same gifts';
I[3][1] = new Array();
I[3][1][0] = new Array();
I[3][1][0][0]='<img src="ta auta dwra.gif" alt="ta auta dwra.gif" width="220" height="30" border="0"></img>';
I[3][1][0][1]='<b>Try again! : (  This means "the same gifts" as S or DO ';
I[3][1][0][2] = 0;
I[3][1][1] = new Array();
I[3][1][1][0]='<img src="touto to auto dwrov.gif" alt="touto to auto dwrov.gif" width="220" height="30" border="0"></img>';
I[3][1][1][1]='<b>Oops!  This means "that same gift" as S or DO. Try again! : (';
I[3][1][1][2] = 0;
I[3][1][2] = new Array();
I[3][1][2][0]='<img src="tois autois dwrois.gif" alt="tois autois dwrois.gif" width="220" height="30" border="0"></img>';
I[3][1][2][1]='<img src="kalws.jpg" alt="kalws.jpg" width="96" height="25" border="0"></img>';
I[3][1][2][2] = 1;
I[3][1][3] = new Array();
I[3][1][3][0]='<img src="twi dwrwi toutwi.gif" alt="twi dwrwi toutwi.gif" width="220" height="30" border="0"></img>';
I[3][1][3][1]='<b>Try again! : (  This means "to, for, with that gift" ';
I[3][1][3][2] = 0;
I[3][1][4] = new Array();
I[3][1][4][0]='<img src="toutov tov potamov.gif" alt="toutov tov potamov.gif" width="220" height="30" border="0"></img>';
I[3][1][4][1]='<b>Oops!  This means "that river" as DO. Try again! : (';
I[3][1][4][2] = 0;
I[3][2] = 0;

I[4] = new Array();
I[4][0]='<font+2><b>to, for, with that gift';
I[4][1] = new Array();
I[4][1][0] = new Array();
I[4][1][0][0]='<img src="touto to dwrov.gif" alt="touto to dwrov.gif" width="220" height="30" border="0"></img>';
I[4][1][0][1]='<b>Try again! : (  This means "that gift" as S or DO ';
I[4][1][0][2] = 0;
I[4][1][1] = new Array();
I[4][1][1][0]='<img src="toutois tois dwrois.gif" alt="toutois tois dwrois.gif" width="220" height="30" border="0"></img>';
I[4][1][1][1]='<b>Oops!  This means "to, for, with those gifts." Try again! : (';
I[4][1][1][2] = 0;
I[4][1][2] = new Array();
I[4][1][2][0]='<img src="twi dwrwi twi autwi.gif" alt="twi dwrwi twi autwi.gif" width="220" height="30" border="0"></img>';
I[4][1][2][1]='<b>Try again! : (  This means "to, for, with the same gift." ';
I[4][1][2][2] = 0;
I[4][1][3] = new Array();
I[4][1][3][0]='<img src="twi dwrwi toutwi.gif" alt="twi dwrwi toutwi.gif" width="220" height="30" border="0"></img>';
I[4][1][3][1]='<img src="kalws.jpg" alt="kalws.jpg" width="96" height="25" border="0"></img>';
I[4][1][3][2] = 1;
I[4][1][4] = new Array();
I[4][1][4][0]='<img src="tou autou dwrou.gif" alt="tou autou dwrou.gif" width="220" height="30" border="0"></img>';
I[4][1][4][1]='<b>Oops!  This means "of the same gift."  Try again! : (';
I[4][1][4][2] = 0;
I[4][2] = 0;

I[5] = new Array();
I[5][0]='<font+2><b>that river';
I[5][1] = new Array();
I[5][1][0] = new Array();
I[5][1][0][0]='<img src="ev tois autois potamois.gif" alt="ev tois autois potamois.gif" width="220" height="30" border="0"></img>';
I[5][1][0][1]='<b>Oops!  This means "in the same rivers." Try again! : (';
I[5][1][0][2] = 0;
I[5][1][1] = new Array();
I[5][1][1][0]='<img src="toutwv twv autwv potamwv.gif" alt="toutwv twv autwv potamwv.gif" width="220" height="30" border="0"></img>';
I[5][1][1][1]='<b>Try again! : (  This means "of those same rivers."';
I[5][1][1][2] = 0;
I[5][1][2] = new Array();
I[5][1][2][0]='<img src="tous potamous tous autous.gif" alt="tous potamous tous autous.gif" width="220" height="30" border="0"></img>';
I[5][1][2][1]='<b>Oops!  This means "the same rivers" as DO.  Try again! : (';
I[5][1][2][2] = 0;
I[5][1][3] = new Array();
I[5][1][3][0]='<img src="hoi autoi potamoi.gif" alt="hoi autoi potamoi.gif" width="220" height="30" border="0"></img>';
I[5][1][3][1]='<b>Try again! : (  This means "the same rivers."';
I[5][1][3][2] = 0;
I[5][1][4] = new Array();
I[5][1][4][0]='<img src="houtos ho potamos.gif" alt="houtos ho potamos.gif" width="220" height="30" border="0"></img>';
I[5][1][4][1]='<img src="kalws.jpg" alt="kalws.jpg" width="96" height="25" border="0"></img>';
I[5][1][4][2] = 1;
I[5][2] = 0;

I[6] = new Array();
I[6][0]='<font+2><b>the same rivers as DO';
I[6][1] = new Array();
I[6][1][0] = new Array();
I[6][1][0][0]='<img src="ev tois autois potamois.gif" alt="ev tois autois potamois.gif" width="220" height="30" border="0"></img>';
I[6][1][0][1]='<b>Try again! : (  This means "in the same rivers."';
I[6][1][0][2] = 0;
I[6][1][1] = new Array();
I[6][1][1][0]='<img src="ev toutwi twi potamwi.gif" alt="ev toutwi twi potamwi.gif" width="220" height="30" border="0"></img>';
I[6][1][1][1]='<b>Oops!  This means "in that river."  Try again! : (';
I[6][1][1][2] = 0;
I[6][1][2] = new Array();
I[6][1][2][0]='<img src="tous potamous tous autous.gif" alt="tous potamous tous autous.gif" width="220" height="30" border="0"></img>';
I[6][1][2][1]='<img src="kalws.jpg" alt="kalws.jpg" width="96" height="25" border="0"></img>';
I[6][1][2][2] = 1;
I[6][1][3] = new Array();
I[6][1][3][0]='<img src="tov autov potamov.gif" alt="tov autov potamov.gif" width="220" height="30" border="0"></img>';
I[6][1][3][1]='<b>Oops!  This means "the same river"  as DO." Try again! : (';
I[6][1][3][2] = 0;
I[6][1][4] = new Array();
I[6][1][4][0]='<img src="ev twi potamwi toutwi.gif" alt="ev twi potamwi toutwi.gif" width="220" height="30" border="0"></img>';
I[6][1][4][1]='<b>Oops!  This means "in that river."  Try again! : (';
I[6][1][4][2] = 0;
I[6][2] = 0;

I[7] = new Array();
I[7][0]='<font+2><b> in the same rivers';
I[7][1] = new Array();
I[7][1][0] = new Array();
I[7][1][0][0]='<img src="ev tois autois potamois.gif" alt="ev tois autois potamois.gif" width="220" height="30" border="0"></img>';
I[7][1][0][1]='<img src="kalws.jpg" alt="kalws.jpg" width="96" height="25" border="0"></img>';
I[7][1][0][2] = 1;
I[7][1][1] = new Array();
I[7][1][1][0]='<img src="hoi autoi potamoi.gif" alt="hoi autoi potamoi.gif" width="220" height="30" border="0"></img>';
I[7][1][1][1]='<b>Try again! : (  This means "the same rivers" as S.';
I[7][1][1][2] = 0;
I[7][1][2] = new Array();
I[7][1][2][0]='<img src="ev toutois tois potamois.gif" alt="ev toutois tois potamois.gif" width="220" height="30" border="0"></img>';
I[7][1][2][1]='<b>Oops!  This means "in those rivers."  Try again! : (';
I[7][1][2][2] = 0;
I[7][1][3] = new Array();
I[7][1][3][0]='<img src="ta auta dwra.gif" alt="ta auta dwra.gif" width="220" height="30" border="0"></img>';
I[7][1][3][1]='<b>Try again! : (  This means "the same gifts" as S or DO.';
I[7][1][3][2] = 0;
I[7][1][4] = new Array();
I[7][1][4][0]='<img src="toutwv twv autwv potamwv.gif" alt="toutwv twv autwv potamwv.gif" width="220" height="30" border="0"></img>';
I[7][1][4][1]='<b>Oops!  This means "of those same rivers."  Try again! : (';
I[7][1][4][2] = 0;
I[7][2] = 0;


Status = new Array();


function CreateStatusArrays(){
	for (var x=0; x<I.length; x++){
		Status[x] = new Array();
		Status[x][0] = 0; // Question not done yet
		Status[x][1] = new Array(); //for tracking whether answers chosen
		for (var y=0; y<I[x][1].length; y++){
			Status[x][1][y] = '0'; //Answers not chosen yet
		}
		Status[x][2] = 0; //Wrong tries at this question so far
		Status[x][3] = 0; //For storing score out of one on this question
	}
}

function ReplaceStuff(Token, Replacement, InString){
	var i = InString.indexOf(Token);
	var FirstBit = '';
	var LastBit = '';
	while (i>-1){
		FirstBit = InString.substring(0, i);
		LastBit = InString.substring(i + Token.length, InString.length);	
		InString = FirstBit + Replacement + LastBit;
		i = InString.indexOf(Token);
	}
	return InString;
}

function ChangeQ(ChangeBy){
	var NewNum = CurrQNum + ChangeBy;
	if ((NewNum >= 0)&&(NewNum<I.length)){
		CurrQNum = NewNum;
		ShowQuestion(CurrQNum);
	}
	var CurrScore = '';
	if ((ContinuousScoring == true)&&(EraseFeedback == true)){
		CurrScore = YourScoreIs + ' ' + Score + '%.';
		WriteFeedback(CurrScore);
	}
}

function BuildQuestion(QNum){
	if (I[QNum][2] == 0){
		var Temp = ReplaceStuff('[Question]', I[QNum][0], QRow);

		var AnsRows = '';
		for (var i=0; i<I[QNum][1].length; i++){
			TempAns = ARow;
			TempAns = ReplaceStuff('[ANum]', i, TempAns);
			TempAns = ReplaceStuff('[ALetter]', ' ' + ALetters.charAt(i) + ' ', TempAns);
			TempAns = ReplaceStuff('[Ans]', I[QNum][1][i][0], TempAns);
			AnsRows += TempAns;
		}
		Temp += AnsRows;
		Temp = ReplaceStuff('[QNumber]', QNum+1, Temp);
		Temp = ReplaceStuff('[QNum]', QNum, Temp);
	}
	else{
		var Temp = ReplaceStuff('[Question]', I[QNum][0], QRow);
		var AnsRows = '';
		for (var i=0; i<I[QNum][1].length; i++){
			TempAns = MARow;
			TempAns = ReplaceStuff('[ANum]', i, TempAns);
			TempAns = ReplaceStuff('[Correct]', I[QNum][1][i][2], TempAns);
			TempAns = ReplaceStuff('[Ans]', I[QNum][1][i][0], TempAns);
			AnsRows += TempAns;
		}
		Temp += AnsRows;
		Temp += CheckButton;
		Temp = ReplaceStuff('[QNumber]', QNum+1, Temp);
		Temp = ReplaceStuff('[QNum]', QNum, Temp);
	}
	return Temp;
}

function DisplayExercise(StuffToDisplay){
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += TitleCode; 
	OutString += '<tr><td bgcolor="#bbbbee" align="center">'; 
	OutString += '<font face="Geneva,Arial" size="-1">';
	OutString += StuffToDisplay;
	OutString += '</font></td></tr>';
	OutString += NavBar;
	OutString += '</table></center></body></html>';

	if (is.CRAPBrowser){OutString=ResolveAllURLs(OutString);}

//Write it to the frame
	BottomFrame.document.clear();
	BottomFrame.document.open();
	BottomFrame.document.write(OutString);
	BottomFrame.document.close();
}


function ShowAllQs(){
	var Output = '';
	for (var i=0; i<I.length-1; i++){
		Output = Output + BuildQuestion(i);
		Output = Output + '<tr><td colspan="4"><hr></hr></td></tr>';
	}
	Output = Output + BuildQuestion(I.length-1);
	Output = TableOpener + Output + TableCloser;
	DisplayExercise(Output);
}

function ShowQuestion(QNum){
//First, create the Q number readout at the top
	var Readout = (QNum+1) + '/' + I.length;
	while (Readout.length < 7){
		Readout = ' ' + Readout + ' ';
	}
	Readout = QButtonsOpener + Readout + QButtonsCloser;

	var Output = BuildQuestion(QNum);

	Output = TableOpener + Output + TableCloser;

	DisplayExercise(Readout + Output);

//Mark the answers already done
	for (i=0; i<Status[QNum][1].length; i++){
		if (Status[QNum][1][i] == 'R'){
			MarkAnswer(QNum,i,true)
		}
		if (Status[QNum][1][i] == 'W'){
			MarkAnswer(QNum,i,false)
		}
		if (Status[QNum][1][i] == 'C'){
			CheckCheckbox(QNum,i);
		}
	}
//Eliminate feedback from previous question
	if (EraseFeedback == true){
		WriteFeedback('');
	}
}

function CheckMulti(QNum){
	var TotWrong = 0;
	var Output = '';
	var TotAns = I[QNum][1].length;
	for (var i=TotAns-1; i>=0; i--){
//Find any incorrect choices

		var b = eval('BottomFrame.document.QForm.A_' + QNum + '_' + i);

		if (b != null){
//if it's wrong, count it
			if (b.checked == true){
				Status[QNum][1][i] = 'C';
			}
			else{
				Status[QNum][1][i] = 'U';
			}
			if (((b.checked == true) && (b.value == "0"))||((b.checked == false)&&(b.value == "1"))){
				TotWrong++;
			}
		}				
	}

	if (TotWrong == 0){
		Output = DefaultRight;
	}
	else{
		Output = DefaultWrong + '<br />' + (TotAns-TotWrong) + '/' + TotAns;
	}

//If you haven't tried the question before
	if (Status[QNum][0] == 0){
		if (TotWrong > 0){
			Status[QNum][2]++;
		}
		if (TotWrong == 0){
			Status[QNum][0] = 1;
//Calculate the score for this question as a floating-point fraction of 1
			Status[QNum][3] =  ((Status[QNum][1].length - Status[QNum][2]) - 1) / (Status[QNum][1].length - 1);
//If less than zero, set to zero
			if (Status[QNum][3] < 0){Status[QNum][3] = 0;}
		}
	}

//Check whether the quiz is finished
	var Finished = true;
	for (var i=0; i<Status.length; i++){
		if (Status[i][0] == 0){Finished = false;}
	}

//Calculate the score if needed
		
	if (Status[QNum][0] == 1){
		if ((Finished==true)||(ContinuousScoring==true)){
			var DoneQs = 0;
			var TotalScore = 0;
			for (var i=0; i<Status.length; i++){
				if (Status[i][0] == 1){
					DoneQs++;
					TotalScore += Status[i][3];
				}
			}
			Score = (Math.floor(100 * (TotalScore/DoneQs)));
			Output = Output + '<br />' + YourScoreIs + ' ' + Score + '%.';
		}

		if (Finished == true){
			EraseFeedback = false;
			var CFT = 0;
			for (i=0; i<I.length; i++){
				if (Status[i][2] == 0){
					CFT++;
				}
			}
		Output += '<br />' + CorrectFirstTime + CFT + '/' + I.length;

		}
	}

//Show the feedback
	if (Output.length > 0){
		WriteFeedback(Output);
	}

}

function CheckAnswer(QNum, ANum){
	var Output = I[QNum][1][ANum][1];

	if (Output==''){
		if (I[QNum][1][ANum][2] == 1){
			Output = DefaultRight;
		}
		else{
			Output = DefaultWrong;
		}
	}

//If it's not been previously answered correctly
	if (Status[QNum][0] == 0){
//If it's a correct answer
		if (I[QNum][1][ANum][2] == 1){
			Status[QNum][0] = 1;//Mark the Q as done
			Status[QNum][1][ANum] = 'R';
			MarkAnswer(QNum, ANum, true);
//Calculate the score for this question as a floating-point fraction of 1
			var PossibleWrongs = 0;
			for (var i=0; i<I[QNum][1].length; i++){
				if (I[QNum][1][i][2] == 0){
					PossibleWrongs++;
				}
			}

			if (PossibleWrongs == 0){PossibleWrongs = 1;}

			Status[QNum][3] = 1 - (Status[QNum][2]/PossibleWrongs);

//If less than zero, set to zero
			if (Status[QNum][3] < 0){Status[QNum][3] = 0;}
		}
		else{
			if (Status[QNum][1][ANum] != 'W'){
				Status[QNum][1][ANum] = 'W';
				MarkAnswer(QNum, ANum, false);
				Status[QNum][2]++; //increment wrong tries for this Q
			}
		}
	}

//Check whether the quiz is finished
	var Finished = true;
	for (var i=0; i<Status.length; i++){
		if (Status[i][0] == 0){Finished = false;}
	}

//Calculate the score if needed
		
	if (Status[QNum][0] == 1){
		if ((Finished==true)||(ContinuousScoring==true)){
			var DoneQs = 0;
			var TotalScore = 0;
			for (var i=0; i<Status.length; i++){
				if (Status[i][0] == 1){
					DoneQs++;
					TotalScore += Status[i][3];
				}
			}
			Score = (Math.floor(100 * (TotalScore/DoneQs)));
			Output = Output + '<br />' + YourScoreIs + ' ' + Score + '%.';
		}

		if (Finished == true){
			EraseFeedback = false;
			var CFT = 0;
			for (i=0; i<I.length; i++){
				if (Status[i][2] == 0){
					CFT++;
				}
			}
		Output += '<br />' + CorrectFirstTime + CFT + '/' + I.length;

		}
	}

//Show the feedback
	if (Output.length > 0){
		WriteFeedback(Output);
	}
}

function MarkAnswer(QNum, ANum, Right){
	var Mark = CorrectIndicator;
	if (Right == false){Mark = IncorrectIndicator;}

	if (eval('BottomFrame.document.QForm.FB_' + QNum + '_' + ANum) != null){
		eval('BottomFrame.document.QForm.FB_' + QNum + '_' + ANum).value = Mark;
	}
}

function CheckCheckbox(QNum, ANum){
	if (eval('BottomFrame.document.QForm.A_' + QNum + '_' + ANum) != null){
		eval('BottomFrame.document.QForm.A_' + QNum + '_' + ANum).checked = true;
	}
}







function Blank(){
	return '<html><body>&copy;Half-Baked Software. Loading...</body></html>';
}

//-->

//]]>

</script>


</head>
<!--<body>Fool those dumb ad-inserting ISPs</body>-->

<!--For full XHTML 1.0 compatibility, remove the border and framespacing attributes.
These are required for proper display in current browsers, but render the document incompatible. Then, you'll need to add the appropriate Document Type Declaration; use
the W3C XHTML 1 frameset DTD.-->


<frameset rows="25%,*" onload="StartUp()" framespacing="0" border="0">
	<frame src="javascript:parent.Blank()" frameborder="0" name="TopFrame"></frame>
	<frame src="javascript:parent.Blank()" frameborder="0" name="BottomFrame"></frame>
</frameset>




</html>
